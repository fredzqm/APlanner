//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APlanner.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Microsoft.AspNet.Identity.EntityFramework;

    public partial class APlannerEntities : IdentityDbContext<Person>
    {
        public APlannerEntities()
            : base("name=APlannerEntities")
        {
        }

        public static APlannerEntities Create()
        {
            return new APlannerEntities();
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Enroll> Enrolls { get; set; }
        public virtual DbSet<Friend> Friends { get; set; }
        public virtual DbSet<Mess> Messes { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<Professor> Professors { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<SPlan> SPlans { get; set; }
        public virtual DbSet<STime> STimes { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Term> Terms { get; set; }
        public virtual DbSet<PlanView> PlanViews { get; set; }
        public virtual DbSet<ProfessorView> ProfessorViews { get; set; }
        public virtual DbSet<SchedulePublicView> SchedulePublicViews { get; set; }
        public virtual DbSet<SectionView> SectionViews { get; set; }
        public virtual DbSet<StudentView> StudentViews { get; set; }

        public virtual int ProvideOwnerPermit(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProvideOwnerPermit", userParameter);
        }
    }
}
